#!/usr/bin/env node
var fs   = require('fs');

var request = require('request');
var yaml = require('js-yaml');

var DEBUG = false;

if (process.argv.length <= 2) {
	process.stderr.write('Usage: check-integration-env path/to/services.yaml [--debug=true]\n');
	process.exit(1);
}

var config = process.argv[2];

if (process.argv.length >= 4 &&
    process.argv[3] === '--debug=true') {
	DEBUG = true;
}

var goodServices = [];
var badServices = [];

try {
  var doc = yaml.safeLoad(fs.readFileSync(config, 'utf8'));
  Object.keys(doc.services).forEach(function(serviceName) {
  	var service = doc.services[serviceName];
  	if (!service.host) {
  		if (DEBUG) process.stdout.write(serviceName + ' missing host, ' + JSON.stringify(service) + '\n');
  		return;
  	}
  	if (!service.adminPort && !service.servicePort) {
  		process.stdout.write(serviceName + ' missing adminPort, ' + JSON.stringify(service) + '\n');
  		return;
  	}
  	switch (serviceName) {
  		case 'address':
  			return;
  		case 'solr':
  		    checkSolr(serviceName, service);
  		    break;
  		default:
  			checkDropWizardService(serviceName, service);
  		    break;
  	}
  });
} catch (e) {
  console.log(e);
  process.exit(2);
}

function checkDropWizardService(serviceName, service) {
	var healthCheckUrl = 'http://' + service.host + ':' + service.adminPort + '/healthcheck';
    doRequest(healthCheckUrl, serviceName, service);
}

function checkSolr(serviceName, service) {
	var healthCheckUrl = 'http://' + service.host + ':' + service.servicePort + '/solr/#/';	
    doRequest(healthCheckUrl, serviceName, service);
}

function doRequest(healthCheckUrl, serviceName, service) {
	request(healthCheckUrl, function(err, res, body) {
    	
    	if (! err && res.statusCode === 200) {
    		goodServices.push(serviceName);    		
    	} else {
    		process.stderr.write('[FAIL] ' + serviceName + ':' + healthCheckUrl + '\n');
    		if (err) {
    			process.stderr.write(err.toString() + '\n');
    		}
			
    		badServices.push(serviceName);
    	}
    });
}

process.on('exit', function() {
	if (badServices.length > 0) {
		process.stdout.write('Bad Services list: ' + badServices.join(', ') + '\n');
	}
	process.stdout.write('Good Services:' + goodServices.join(', ') + '\n');
})